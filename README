# 🎬 Cinema Ticketing System

A backend-focused project simulating a real-world cinema booking system. This monolithic FastAPI app allows users to register, browse movies, and book tickets for screenings. Admins can manage movie listings and showtimes. Built with clean architecture and designed for scalability, eventual migration to microservices, and deployment on AWS.

---

## 🚀 Features

### 🧑‍💻 User Features
- Register & log in (JWT authentication)
- View available movies and showtimes
- Book tickets for a screening (no seat selection)
- Cancel bookings

### 🛠️ Admin Features
- Add, edit, or delete movies
- Schedule or cancel screenings
- View booking stats (basic)

---

## 🧱 Tech Stack

| Layer         | Tech                               |
|---------------|------------------------------------|
| **Backend**   | Python, FastAPI, Pydantic          |
| **Database**  | PostgreSQL                         |
| **Auth**      | JWT (via `python-jose`) - coming soon            |
| **Infra**     | Docker, docker-compose             |
| **DevOps**    | GitHub Actions (CI/CD coming soon) |
| **Future**    | Redis (caching/locking), Kafka/SQS (async), AWS (deploy) - coming soon |

---

## 📁 Project Structure

```bash
cinema-booking-system/
├── app/
│   ├── main.py                # Entry point
│   ├── api/                   # Routes (users, bookings, etc.)
│   ├── core/                  # Config, settings, JWT utils
│   ├── models/                # SQLAlchemy models
│   ├── schemas/               # Pydantic request/response schemas
│   ├── services/              # Business logic
├── alembic.ini
├── docker-compose.yml
├── Dockerfile
├── requirements.txt
├── README.md
└── .env.example
